{"ast":null,"code":"var _jsxFileName = \"/Users/phoebe0506/github-classroom/CMU-SSUI-Fall2022/hw5-hsuanjuw/src/containers/Workspace/SVGLayer/SVGLayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useContext, useState } from \"react\";\nimport Line from \"./shapes/Line\";\nimport Rect from \"./shapes/Rect\";\nimport Ellipse from \"./shapes/Ellipse\";\nimport ControlContext from \"../../../contexts/control-context\";\nimport { selectShadowId } from \"../../../shared/util\";\nconst SVGLayer = () => {\n  _s();\n  const {\n    currMode,\n    currBorderColor,\n    currBorderWidth,\n    currFillColor,\n    shapes,\n    shapesMap,\n    addShape,\n    moveShape,\n    selectedShapeId,\n    selectShape,\n    addMoveCmdObj\n  } = useContext(ControlContext);\n\n  // use useState to set elements in the React state directly\n  // the first element of the list is the state value\n  // the second element of the list is a function to update the state value in the future\n  const [drawing, setDrawing] = useState(false);\n  const [initPoint, setInitPoint] = useState({\n    x: undefined,\n    y: undefined\n  });\n  const [currPoint, setCurrPoint] = useState({\n    x: undefined,\n    y: undefined\n  });\n  const [dragging, setDragging] = useState(false);\n  const [draggingShape, setDraggingShape] = useState(undefined);\n  const [draggingShapeOldPos, setDraggingShapeOldPos] = useState({\n    initCoords: {\n      x: undefined,\n      y: undefined\n    },\n    finalCoords: {\n      x: undefined,\n      y: undefined\n    }\n  });\n  const [draggingShapeNewPos, setDraggingShapeNewPos] = useState({\n    initCoords: {\n      x: undefined,\n      y: undefined\n    },\n    finalCoords: {\n      x: undefined,\n      y: undefined\n    }\n  });\n  const [mouseDownPoint, setMouseDownPoint] = useState({\n    x: undefined,\n    y: undefined\n  });\n  const handleMouseDown = e => {\n    if (currMode !== \"select\") {\n      // should create\n      setDrawing(true);\n      setInitPoint({\n        x: e.nativeEvent.offsetX,\n        y: e.nativeEvent.offsetY\n      });\n      setCurrPoint({\n        x: e.nativeEvent.offsetX,\n        y: e.nativeEvent.offsetY\n      });\n      e.preventDefault();\n    } else {\n      // should select\n      if (e.target.nodeName === \"svg\") {\n        // deselect\n        selectShape(undefined);\n      } else {\n        // select\n        const targetId = e.target.id;\n        selectShape(targetId);\n        setDragging(true);\n        setMouseDownPoint({\n          x: e.nativeEvent.offsetX,\n          y: e.nativeEvent.offsetY\n        });\n        setDraggingShape(shapesMap[shapes.filter(shapeId => shapeId === targetId)[0]]);\n        setDraggingShapeOldPos({\n          initCoords: {\n            x: shapesMap[shapes.filter(shapeId => shapeId === targetId)[0]].initCoords.x,\n            y: shapesMap[shapes.filter(shapeId => shapeId === targetId)[0]].initCoords.y\n          },\n          finalCoords: {\n            x: shapesMap[shapes.filter(shapeId => shapeId === targetId)[0]].finalCoords.x,\n            y: shapesMap[shapes.filter(shapeId => shapeId === targetId)[0]].finalCoords.y\n          }\n        });\n      }\n    }\n  };\n  const handleMouseMove = e => {\n    if (drawing) {\n      setCurrPoint({\n        x: e.nativeEvent.offsetX,\n        y: e.nativeEvent.offsetY\n      });\n    } else if (dragging && draggingShape) {\n      const deltaX = e.nativeEvent.offsetX - mouseDownPoint.x;\n      const deltaY = e.nativeEvent.offsetY - mouseDownPoint.y;\n      moveShape({\n        initCoords: {\n          x: draggingShape.initCoords.x + deltaX,\n          y: draggingShape.initCoords.y + deltaY\n        },\n        finalCoords: {\n          x: draggingShape.finalCoords.x + deltaX,\n          y: draggingShape.finalCoords.y + deltaY\n        }\n      });\n      setDraggingShapeNewPos({\n        initCoords: {\n          x: draggingShape.initCoords.x + deltaX,\n          y: draggingShape.initCoords.y + deltaY\n        },\n        finalCoords: {\n          x: draggingShape.finalCoords.x + deltaX,\n          y: draggingShape.finalCoords.y + deltaY\n        }\n      });\n    }\n  };\n  const handleMouseUp = e => {\n    if (currMode !== \"select\") {\n      if (!(initPoint.x === currPoint.x && initPoint.y === currPoint.y)) {\n        // check if it's too small\n        const threshold = 10;\n        let shouldCreate = true;\n        const deltaX = Math.abs(initPoint.x - currPoint.x);\n        const deltaY = Math.abs(initPoint.y - currPoint.y);\n        if (currMode === \"line\") {\n          if (Math.sqrt(deltaX ** 2 + deltaY ** 2) < threshold) {\n            shouldCreate = false;\n          }\n        } else {\n          if (deltaX < threshold || deltaY < threshold) {\n            shouldCreate = false;\n          }\n        }\n        if (shouldCreate) {\n          // create\n          addShape({\n            type: currMode,\n            visible: true,\n            initCoords: initPoint,\n            finalCoords: currPoint,\n            borderColor: currBorderColor,\n            borderWidth: currBorderWidth,\n            fillColor: currFillColor\n          });\n        }\n      }\n      setDrawing(false);\n      setInitPoint({\n        x: undefined,\n        y: undefined\n      });\n      setCurrPoint({\n        x: undefined,\n        y: undefined\n      });\n    } else {\n      if (dragging) {\n        addMoveCmdObj(draggingShapeOldPos, draggingShapeNewPos);\n      }\n      setDragging(false);\n      setDraggingShape(undefined);\n      setMouseDownPoint({\n        x: undefined,\n        y: undefined\n      });\n    }\n  };\n\n  // useCallback gives a memoized version of the callback that changes when one of its dependencies change\n  // the first argument is the function that will be run\n  // the second is the dependencies that the function relies on\n  const escKeyDownHandler = useCallback(e => {\n    if (e.key === \"Escape\") {\n      // abort\n      if (drawing) {\n        setDrawing(false);\n        setInitPoint({\n          x: undefined,\n          y: undefined\n        });\n        setCurrPoint({\n          x: undefined,\n          y: undefined\n        });\n      } else if (dragging) {\n        moveShape({\n          initCoords: {\n            x: draggingShape.initCoords.x,\n            y: draggingShape.initCoords.y\n          },\n          finalCoords: {\n            x: draggingShape.finalCoords.x,\n            y: draggingShape.finalCoords.y\n          }\n        });\n        setDragging(false);\n        setDraggingShape(undefined);\n        setMouseDownPoint({\n          x: undefined,\n          y: undefined\n        });\n      }\n    }\n  }, [drawing, dragging, draggingShape, moveShape]);\n\n  // useEffect will run after the render is committed to the screen\n  // the first argument is the function that will run\n  // the second argument are the dependencies, meaning this will only run when there is a change in these values\n  useEffect(() => {\n    window.addEventListener(\"keydown\", escKeyDownHandler, true);\n    return () => window.removeEventListener(\"keydown\", escKeyDownHandler, true);\n  }, [escKeyDownHandler]);\n  const genShape = function (shapeData) {\n    let key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    const {\n      initCoords,\n      finalCoords,\n      borderColor,\n      borderWidth,\n      fillColor,\n      id\n    } = shapeData;\n    const filter = selectedShapeId && selectedShapeId === id ? `url(#${selectShadowId})` : null;\n    switch (shapeData.type) {\n      case \"line\":\n        {\n          return /*#__PURE__*/React.createElement(Line, {\n            x1: initCoords.x,\n            y1: initCoords.y,\n            x2: finalCoords.x,\n            y2: finalCoords.y,\n            borderColor,\n            borderWidth,\n            id,\n            key,\n            filter\n          });\n        }\n      case \"rect\":\n        {\n          return /*#__PURE__*/React.createElement(Rect, {\n            x: Math.min(initCoords.x, finalCoords.x),\n            y: Math.min(initCoords.y, finalCoords.y),\n            width: Math.abs(finalCoords.x - initCoords.x),\n            height: Math.abs(finalCoords.y - initCoords.y),\n            fillColor,\n            borderColor,\n            borderWidth,\n            id,\n            key,\n            filter\n          });\n        }\n      case \"ellipse\":\n        {\n          let x = Math.min(finalCoords.x, initCoords.x);\n          let y = Math.min(finalCoords.y, initCoords.y);\n          let w = Math.abs(finalCoords.x - initCoords.x);\n          let h = Math.abs(finalCoords.y - initCoords.y);\n          return /*#__PURE__*/React.createElement(Ellipse, {\n            cx: x + w / 2,\n            cy: y + h / 2,\n            rx: w / 2,\n            ry: h / 2,\n            fillColor,\n            borderColor,\n            borderWidth,\n            id,\n            key,\n            filter\n          });\n        }\n      default:\n        {\n          return null;\n        }\n    }\n  };\n  const renderShape = (shapeData, key) => {\n    if (shapeData.visible) {\n      return genShape(shapeData, key);\n    } else {\n      return null;\n    }\n  };\n  const renderTempShape = () => {\n    if (initPoint.x !== undefined && initPoint.y !== undefined && currPoint.x !== undefined && currPoint.y !== undefined) {\n      return genShape({\n        type: currMode,\n        initCoords: initPoint,\n        finalCoords: currPoint,\n        borderColor: currBorderColor,\n        borderWidth: currBorderWidth,\n        fillColor: currFillColor\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"workspace-svg\",\n    width: \"800\",\n    height: \"700\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: selectShadowId,\n    x: \"-100%\",\n    y: \"-100%\",\n    width: \"400%\",\n    height: \"400%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"feDropShadow\", {\n    dx: \"0\",\n    dy: \"0\",\n    stdDeviation: \"15\",\n    floodColor: \"rgba(0, 0, 0, 0.7)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  })), shapes.map((shapeId, idx) => {\n    return renderShape(shapesMap[shapeId], idx);\n  }), drawing && renderTempShape());\n};\n_s(SVGLayer, \"WGicRkYnBLz2wvFAex1ZOQKBPJ8=\");\n_c = SVGLayer;\nexport default SVGLayer;\nvar _c;\n$RefreshReg$(_c, \"SVGLayer\");","map":{"version":3,"names":["React","useEffect","useCallback","useContext","useState","Line","Rect","Ellipse","ControlContext","selectShadowId","SVGLayer","_s","currMode","currBorderColor","currBorderWidth","currFillColor","shapes","shapesMap","addShape","moveShape","selectedShapeId","selectShape","addMoveCmdObj","drawing","setDrawing","initPoint","setInitPoint","x","undefined","y","currPoint","setCurrPoint","dragging","setDragging","draggingShape","setDraggingShape","draggingShapeOldPos","setDraggingShapeOldPos","initCoords","finalCoords","draggingShapeNewPos","setDraggingShapeNewPos","mouseDownPoint","setMouseDownPoint","handleMouseDown","e","nativeEvent","offsetX","offsetY","preventDefault","target","nodeName","targetId","id","filter","shapeId","handleMouseMove","deltaX","deltaY","handleMouseUp","threshold","shouldCreate","Math","abs","sqrt","type","visible","borderColor","borderWidth","fillColor","escKeyDownHandler","key","window","addEventListener","removeEventListener","genShape","shapeData","arguments","length","createElement","x1","y1","x2","y2","min","width","height","w","h","cx","cy","rx","ry","renderShape","renderTempShape","onMouseDown","onMouseMove","onMouseUp","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","dx","dy","stdDeviation","floodColor","map","idx","_c","$RefreshReg$"],"sources":["/Users/phoebe0506/github-classroom/CMU-SSUI-Fall2022/hw5-hsuanjuw/src/containers/Workspace/SVGLayer/SVGLayer.js"],"sourcesContent":["import React, { useEffect, useCallback, useContext, useState } from \"react\";\n\nimport Line from \"./shapes/Line\";\nimport Rect from \"./shapes/Rect\";\nimport Ellipse from \"./shapes/Ellipse\";\n\nimport ControlContext from \"../../../contexts/control-context\";\nimport { selectShadowId } from \"../../../shared/util\";\n\nconst SVGLayer = () => {\n  const {\n    currMode,\n    currBorderColor,\n    currBorderWidth,\n    currFillColor,\n    shapes,\n    shapesMap,\n    addShape,\n    moveShape,\n    selectedShapeId,\n    selectShape,\n    addMoveCmdObj\n  } = useContext(ControlContext);\n\n  // use useState to set elements in the React state directly\n  // the first element of the list is the state value\n  // the second element of the list is a function to update the state value in the future\n  const [drawing, setDrawing] = useState(false);\n  const [initPoint, setInitPoint] = useState({ x: undefined, y: undefined });\n  const [currPoint, setCurrPoint] = useState({ x: undefined, y: undefined });\n\n  const [dragging, setDragging] = useState(false);\n  const [draggingShape, setDraggingShape] = useState(undefined);\n  const [draggingShapeOldPos, setDraggingShapeOldPos] = useState({ initCoords: { x: undefined, y: undefined},finalCoords: { x: undefined, y: undefined} });\n  const [draggingShapeNewPos, setDraggingShapeNewPos] = useState({ initCoords: { x: undefined, y: undefined},finalCoords: { x: undefined, y: undefined} });\n  const [mouseDownPoint, setMouseDownPoint] = useState({\n    x: undefined,\n    y: undefined,\n  });\n\n  const handleMouseDown = (e) => {\n    if (currMode !== \"select\") {\n      // should create\n      setDrawing(true);\n      setInitPoint({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      setCurrPoint({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      e.preventDefault();\n    } else {\n      // should select\n      if (e.target.nodeName === \"svg\") {\n        // deselect\n        selectShape(undefined);\n      } else {\n        // select\n        const targetId = e.target.id;\n        selectShape(targetId);\n        setDragging(true);\n        setMouseDownPoint({\n          x: e.nativeEvent.offsetX,\n          y: e.nativeEvent.offsetY,\n        });\n        setDraggingShape(\n          shapesMap[shapes.filter((shapeId) => shapeId === targetId)[0]]\n        );\n        setDraggingShapeOldPos({\n          initCoords: {\n            x: shapesMap[shapes.filter((shapeId) => shapeId === targetId)[0]].initCoords.x,\n            y: shapesMap[shapes.filter((shapeId) => shapeId === targetId)[0]].initCoords.y,\n          },\n          finalCoords: {\n            x: shapesMap[shapes.filter((shapeId) => shapeId === targetId)[0]].finalCoords.x,\n            y: shapesMap[shapes.filter((shapeId) => shapeId === targetId)[0]].finalCoords.y,\n          }\n        });\n      }\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (drawing) {\n      setCurrPoint({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n    } else if (dragging && draggingShape) {\n      const deltaX = e.nativeEvent.offsetX - mouseDownPoint.x;\n      const deltaY = e.nativeEvent.offsetY - mouseDownPoint.y;\n\n      moveShape({\n        initCoords: {\n          x: draggingShape.initCoords.x + deltaX,\n          y: draggingShape.initCoords.y + deltaY,\n        },\n        finalCoords: {\n          x: draggingShape.finalCoords.x + deltaX,\n          y: draggingShape.finalCoords.y + deltaY,\n        },\n      });\n\n      setDraggingShapeNewPos({\n        initCoords: {\n          x: draggingShape.initCoords.x + deltaX,\n          y: draggingShape.initCoords.y + deltaY,\n        },\n        finalCoords: {\n          x: draggingShape.finalCoords.x + deltaX,\n          y: draggingShape.finalCoords.y + deltaY,\n        },\n      });\n    }\n  };\n\n  const handleMouseUp = (e) => {\n    if (currMode !== \"select\") {\n      if (!(initPoint.x === currPoint.x && initPoint.y === currPoint.y)) {\n        // check if it's too small\n        const threshold = 10;\n        let shouldCreate = true;\n        const deltaX = Math.abs(initPoint.x - currPoint.x);\n        const deltaY = Math.abs(initPoint.y - currPoint.y);\n        if (currMode === \"line\") {\n          if (Math.sqrt(deltaX ** 2 + deltaY ** 2) < threshold) {\n            shouldCreate = false;\n          }\n        } else {\n          if (deltaX < threshold || deltaY < threshold) {\n            shouldCreate = false;\n          }\n        }\n\n        if (shouldCreate) {\n          // create\n          addShape({\n            type: currMode,\n            visible: true,\n            initCoords: initPoint,\n            finalCoords: currPoint,\n            borderColor: currBorderColor,\n            borderWidth: currBorderWidth,\n            fillColor: currFillColor,\n          });\n        }\n      }\n\n      setDrawing(false);\n      setInitPoint({ x: undefined, y: undefined });\n      setCurrPoint({ x: undefined, y: undefined });\n    } else {\n      if (dragging) {\n        addMoveCmdObj(draggingShapeOldPos, draggingShapeNewPos);\n      }\n      setDragging(false);\n      setDraggingShape(undefined);\n      setMouseDownPoint({ x: undefined, y: undefined });\n    }\n  };\n\n  // useCallback gives a memoized version of the callback that changes when one of its dependencies change\n  // the first argument is the function that will be run\n  // the second is the dependencies that the function relies on\n  const escKeyDownHandler = useCallback(\n    (e) => {\n      if (e.key === \"Escape\") {\n        // abort\n        if (drawing) {\n          setDrawing(false);\n          setInitPoint({ x: undefined, y: undefined });\n          setCurrPoint({ x: undefined, y: undefined });\n        } else if (dragging) {\n          moveShape({\n            initCoords: {\n              x: draggingShape.initCoords.x,\n              y: draggingShape.initCoords.y,\n            },\n            finalCoords: {\n              x: draggingShape.finalCoords.x,\n              y: draggingShape.finalCoords.y,\n            },\n          });\n          setDragging(false);\n          setDraggingShape(undefined);\n          setMouseDownPoint({ x: undefined, y: undefined });\n        }\n      }\n    },\n    [drawing, dragging, draggingShape, moveShape]\n  );\n\n  // useEffect will run after the render is committed to the screen\n  // the first argument is the function that will run\n  // the second argument are the dependencies, meaning this will only run when there is a change in these values\n  useEffect(() => {\n    window.addEventListener(\"keydown\", escKeyDownHandler, true);\n    return () => window.removeEventListener(\"keydown\", escKeyDownHandler, true);\n  }, [escKeyDownHandler]);\n\n  const genShape = (shapeData, key = undefined) => {\n    const {\n      initCoords,\n      finalCoords,\n      borderColor,\n      borderWidth,\n      fillColor,\n      id,\n    } = shapeData;\n    const filter =\n      selectedShapeId && selectedShapeId === id\n        ? `url(#${selectShadowId})`\n        : null;\n    switch (shapeData.type) {\n      case \"line\": {\n        return React.createElement(Line, {\n          x1: initCoords.x,\n          y1: initCoords.y,\n          x2: finalCoords.x,\n          y2: finalCoords.y,\n          borderColor,\n          borderWidth,\n          id,\n          key,\n          filter,\n        });\n      }\n      case \"rect\": {\n        return React.createElement(Rect, {\n          x: Math.min(initCoords.x, finalCoords.x),\n          y: Math.min(initCoords.y, finalCoords.y),\n          width: Math.abs(finalCoords.x - initCoords.x),\n          height: Math.abs(finalCoords.y - initCoords.y),\n          fillColor,\n          borderColor,\n          borderWidth,\n          id,\n          key,\n          filter,\n        });\n      }\n      case \"ellipse\": {\n        let x = Math.min(finalCoords.x, initCoords.x);\n        let y = Math.min(finalCoords.y, initCoords.y);\n        let w = Math.abs(finalCoords.x - initCoords.x);\n        let h = Math.abs(finalCoords.y - initCoords.y);\n\n        return React.createElement(Ellipse, {\n          cx: x + w / 2,\n          cy: y + h / 2,\n          rx: w / 2,\n          ry: h / 2,\n          fillColor,\n          borderColor,\n          borderWidth,\n          id,\n          key,\n          filter,\n        });\n      }\n      default: {\n        return null;\n      }\n    }\n  };\n\n  const renderShape = (shapeData, key) => {\n    if (shapeData.visible) {\n      return genShape(shapeData, key);\n    } else {\n      return null;\n    }\n  };\n\n  const renderTempShape = () => {\n    if (\n      initPoint.x !== undefined &&\n      initPoint.y !== undefined &&\n      currPoint.x !== undefined &&\n      currPoint.y !== undefined\n    ) {\n      return genShape({\n        type: currMode,\n        initCoords: initPoint,\n        finalCoords: currPoint,\n        borderColor: currBorderColor,\n        borderWidth: currBorderWidth,\n        fillColor: currFillColor,\n      });\n    }\n  };\n\n  return (\n    <svg\n      id=\"workspace-svg\"\n      width=\"800\"\n      height=\"700\"\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n    >\n      <filter\n        id={selectShadowId}\n        x=\"-100%\"\n        y=\"-100%\"\n        width=\"400%\"\n        height=\"400%\"\n      >\n        <feDropShadow\n          dx=\"0\"\n          dy=\"0\"\n          stdDeviation=\"15\"\n          floodColor=\"rgba(0, 0, 0, 0.7)\"\n        />\n      </filter>\n      {shapes.map((shapeId, idx) => {\n        return renderShape(shapesMap[shapeId], idx);\n      })}\n      {drawing && renderTempShape()}\n    </svg>\n  );\n};\n\nexport default SVGLayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}